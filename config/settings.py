"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
from decouple import config


DEBUG = config('DEBUG', default=False, cast=bool)  # Boolean cast
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', default='5432'),
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'optics-database',
#         'USER': 'optics',
#         'PASSWORD': 'optics',
#         'HOST': "localhost",
#         # 'HOST': config('DB_HOST'),
#         'PORT': 5432,
#     }
# }


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')


ALLOWED_HOSTS = ['localhost', '127.0.0.1', '0.0.0.0']
# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    #   Библеотеки
    "rest_framework",
    "django_filters",
    "drf_spectacular",
    "rest_framework_simplejwt",
    #   Приложения проекта
    "apps.users",
    "apps.product_category",
    "apps.cart",
    "apps.eye_test_signup",
    "apps.order",
    "apps.company_info",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "ru"

TIME_ZONE = "Asia/Bishkek"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATIC_URL = "/static/"
STATIC_ROOT = "/app/staticfiles"
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]



MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.User"

DOMEN_URL = "http://127.0.0.1:8000"
BOT_TOKEN = "7730816921:AAEXqUnAaqSftjrBo2ew6d1-YusFVABcGs4"
CHAT_ID = 2084770237

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),  # Время жизни access токена
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),  # Время жизни refresh токена
    "ROTATE_REFRESH_TOKENS": False,  # Ротация refresh токенов при каждом запросе
    "BLACKLIST_AFTER_ROTATION": True,  # Добавлять старые refresh токены в blacklist (если включена ротация)
    "UPDATE_LAST_LOGIN": False,  # Обновлять поле last_login при получении токена
    "ALGORITHM": "HS256",  # Алгоритм шифрования токена
    "SIGNING_KEY": SECRET_KEY,  # Секретный ключ для подписания токенов
    "VERIFYING_KEY": None,  # Публичный ключ (если используется асимметричное шифрование)
    "AUDIENCE": None,  # Аудитория токена
    "ISSUER": None,  # Издатель токена
    "AUTH_HEADER_TYPES": (
        "Bearer",
    ),  # Префикс авторизации в заголовке (например, "Bearer <token>")
    "USER_ID_FIELD": "id",  # Поле для идентификации пользователя
    "USER_ID_CLAIM": "user_id",  # Поле внутри токена, в котором хранится user_id
    "AUTH_TOKEN_CLASSES": (
        "rest_framework_simplejwt.tokens.AccessToken",
    ),  # Классы токенов
    "TOKEN_TYPE_CLAIM": "token_type",  # Поле в токене, указывающее его тип
    "JTI_CLAIM": "jti",  # Уникальный идентификатор токена
    "SLIDING_TOKEN_LIFETIME": timedelta(
        minutes=5
    ),  # Время жизни скользящих токенов (если используется SlidingToken)
    "SLIDING_TOKEN_REFRESH_LIFETIME": timedelta(
        days=1
    ),  # Время жизни refresh для SlidingToken
}

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "aktanarynov566@gmail.com"
EMAIL_HOST_PASSWORD = "zelt flio uuax zgnk"


JAZZMIN_SETTINGS = {
    "show_ui_builder": True,  # Включает UI Builder для настройки интерфейса
    "site_title": "OpticsStore Admin",  # Заголовок страницы в браузере
    "site_brand": "OpticsStore",  # Название бренда в админке
    "welcome_sign": "Добро пожаловать в панель управления OpticsStore",  # Приветствие на странице входа
}
