openapi: 3.0.3
info:
  title: Название вашего API
  version: 1.0.0
  description: Описание вашего API
paths:
  /api/authentication/account/profile/:
    get:
      operationId: api_authentication_account_profile_list
      description: Возвращает профиль текущего пользователя
      summary: Получить профиль
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
          description: ''
    post:
      operationId: api_authentication_account_profile_create
      description: Создает профиль для текущего пользователя
      summary: Создать профиль
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          description: 'Ошибка валидации: Профиль уже существует'
  /api/authentication/account/profile/{id}/:
    get:
      operationId: api_authentication_account_profile_retrieve
      description: Возвращает детальную информацию о профиле пользователя
      summary: Получить детали профиля
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Профиль.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_authentication_account_profile_update
      description: Обновляет информацию о текущем пользователе
      summary: Обновить профиль
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Профиль.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          description: Ошибка валидации
    patch:
      operationId: api_authentication_account_profile_partial_update
      description: Частично обновляет профиль текущего пользователя
      summary: Частичное обновление профиля
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Профиль.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          description: Ошибка валидации
    delete:
      operationId: api_authentication_account_profile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Профиль.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/authentication/request-password-reset/:
    post:
      operationId: api_authentication_request_password_reset_create
      description: Отправляет ссылку для сброса пароля на указанный email
      summary: Запрос на сброс пароля
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestPasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Ссылка для сброса пароля отправлена
        '400':
          description: Ошибка валидации
  /api/authentication/reset-password/{uidb64}/{token}/:
    post:
      operationId: api_authentication_reset_password_create
      description: Завершает процесс сброса пароля
      summary: Сброс пароля
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetPassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Пароль успешно изменен.
        '400':
          description: Ошибка валидации или недействительный токен
  /api/authentication/sign-in/:
    post:
      operationId: api_authentication_sign_in_create
      description: Авторизация пользователя по email и паролю с выдачей токена
      summary: Авторизация пользователя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Успешный вход
        '400':
          description: Ошибка авторизации
  /api/authentication/sign-up/:
    post:
      operationId: api_authentication_sign_up_create
      description: Создание нового пользователя с отправкой кода подтверждения на
        email
      summary: Регистрация пользователя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Код регистрации отправлен на ваш email
        '400':
          description: Ошибка валидации
  /api/authentication/sign-up-confirmation/:
    post:
      operationId: api_authentication_sign_up_confirmation_create
      description: Подтверждение регистрации пользователя по email и коду
      summary: Подтверждение регистрации
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: Регистрация успешно подтверждена
        '400':
          description: Ошибка валидации
  /api/authentication/token/:
    post:
      operationId: api_authentication_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/authentication/token/refresh/:
    post:
      operationId: api_authentication_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    ConfirmRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
        code:
          type: string
          maxLength: 6
      required:
      - code
      - email
    GenderEnum:
      enum:
      - Мужской
      - Женский
      type: string
      description: |-
        * `Мужской` - Мужской
        * `Женский` - Женский
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
      required:
      - email
      - password
    NullEnum:
      enum:
      - null
    PatchedProfile:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 50
        last_name:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
    Profile:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          nullable: true
          maxLength: 50
        last_name:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          nullable: true
          maxLength: 100
        date_of_birth:
          type: string
          format: date
          nullable: true
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - email
    Register:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        password_confirm:
          type: string
          minLength: 8
      required:
      - email
      - password
      - password_confirm
    RequestPasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    ResetPassword:
      type: object
      properties:
        new_password:
          type: string
          minLength: 8
        new_password_confirm:
          type: string
          minLength: 8
      required:
      - new_password
      - new_password_confirm
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
